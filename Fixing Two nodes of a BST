class Solution {
  public:
    void correctBSTUtil(Node* root,Node* &first,Node* &middle,Node* &last,Node* &prev){
        if(root == nullptr)
            return;
        correctBSTUtil(root->left,first,middle,last,prev);
        if(prev && root->data<prev->data){
            if(!first){
                first=prev;
                middle=root;
            }
            else{
                last = root;
            }
       }
        prev = root;
        correctBSTUtil(root->right,first,middle,last,prev);
    } 
    void correctBST(Node* root) {
       Node* first=nullptr,*middle=nullptr,*last = nullptr,*prev=nullptr;
       correctBSTUtil(root,first,middle,last,prev);
       if(first && last){
           swap(first->data , last->data);
       }
        else if(first && middle){
            swap(first->data,middle->data);
        
       }
    }
};
